git pushBack()
source("~/info201/exercises/exercises-CrimsonAshes/chapter-06-exercises/exercise-3/exercise.R")
source("~/info201/exercises/exercises-CrimsonAshes/chapter-06-exercises/exercise-3/exercise.R")
source("~/info201/exercises/exercises-CrimsonAshes/chapter-06-exercises/exercise-3/exercise.R")
git commit
gitconfig
git config
source("~/info201/exercises/exercises-CrimsonAshes/chapter-06-exercises/exercise-3/exercise.R")
source("~/info201/exercises/exercises-CrimsonAshes/chapter-06-exercises/exercise-3/exercise.R")
source("~/info201/exercises/exercises-CrimsonAshes/chapter-06-exercises/exercise-3/exercise.R")
source("~/info201/exercises/exercises-CrimsonAshes/chapter-06-exercises/exercise-3/exercise.R")
git config
source("~/info201/exercises/exercises-CrimsonAshes/chapter-06-exercises/exercise-3/exercise.R")
source("~/info201/exercises/exercises-CrimsonAshes/chapter-06-exercises/exercise-3/exercise.R")
source("~/info201/exercises/exercises-CrimsonAshes/chapter-06-exercises/exercise-3/exercise.R")
source("~/info201/exercises/exercises-CrimsonAshes/chapter-06-exercises/exercise-3/exercise.R")
source("~/info201/exercises/exercises-CrimsonAshes/chapter-06-exercises/exercise-3/exercise.R")
source("~/info201/exercises/exercises-CrimsonAshes/chapter-06-exercises/exercise-3/exercise.R")
source("~/info201/exercises/exercises-CrimsonAshes/chapter-06-exercises/exercise-3/exercise.R")
is_twice_as_long <- function(part_a, part_b)<- if(part_a>part_b){print(TRUE)
is_twice_as_long <- function(part_a, part_b)<- if(part_a>part_b)
{print(TRUE)}
is_twice_as_long <- function(part_a, part_b)<- if(part_a>part_b)
is_twice_as_long <- function(part_a, part_b)
is_twice_as_long <- function(part_a, part_b)
is_twice_as_long <- function(part_a, part_b) <- if(part_a>partb)
is_twice_as_long <- function(part_a, part_b) {if(part_a>part_b){
is_twice_as_long <- function(part_a, part_b) {if(part_a>part_b){
is_twice_as_long <- function(part_a, part_b) {if(part_a>part_b)status<-{
is_twice_as_long <- function(part_a, part_b) {
is_twice_as_long <- function(part_a, part_b){if(part_a>part_b)status<-{print("a_is_longer"}if else(part_a<part_b)status<-{print("b_is_longer")} else status <- {print(Equal)}status}
# Call your `is_twice_as_long` function by passing it different length strings
# Call your `is_twice_as_long` function by passing it different length strings
# to confirm that it works. Make sure to check when _either_ argument is twice
is_twice_as_long <- function(part_a, part_b){if(part_a>part_b)status<-{print("a_is_longer"}if else(part_a<part_b)status<-{print("b_is_longer")} else status <- {print(Equal)}status}
is_twice_as_long<- function(part_a,part_b){
is_twice_as_long<- function(part_a,part_b){
h
print()
}
}}}}}}}
is_twice_as_long<- function(part_a,part_b){
print("a_is_longer"
}if else(part_a<part_b)status<-{
is_twice_as_long<- function(part_a,part_b){
print("a_is_longer"
} if else(part_a<part_b)status<-{
is_twice_as_long<- function(part_a,part_b){
print("a_is_longer"
print("b_is_longer")
else status <- {print(Equal)}status}
is_twice_as_long<- function(part_a,part_b){
is_twice_as_long<- function(part_a,part_b){
print("a_is_longer")
if else(part_a<part_b)[status<-{
print("b_is_longer")}}}
is_twice_as_long<- function(part_a,part_b){
print("a_is_longer")
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b)status<- {
print("a_is_longer")
}else(part_a<part_b)status<-{print("b_is_longer")}
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b)status<- {
print("a_is_longer")
}else(part_a<part_b)status<-{
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b)status<-{print("a_is_longer")
}else(part_a<part_b)status<-{
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b)status<-{
print("a_is_longer")
}else(part_a<part_b)status<-{
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
} if else(part_a<part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
} else(part_a<part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}else(part_a<part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}else(part_a<part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}else(part_a<part_b)   {
if(part_a>part_b){
status<-print("the first is longer")
}else(part_a<part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}else(part_a<part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}else(part_a<part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}else(part_a<part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}else(part_a<part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else(part_a<part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else(part_a<part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else(part_a<part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else(part_a<part_b) {
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}  else(part_a=part_b) {
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}  else(part_a=part_b)  {
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}  else(part_a=part_b) {
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}  else(part_a=part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){
{
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){
{
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){
{
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){
{
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){
{
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){
{
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){
{
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){
{
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){
{
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){status<-print("they both are equal")
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){
}else(part_a<part_b)status<-{
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){
status<-print("they both are equal")
is_twice_as_long(45,89)
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b) {
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b) {
# Call your `is_twice_as_long` function by passing it different length strings
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b) {
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){status<-print("they are equal")}
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b) {
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}
status
}
is_twice_as_long(5,5)
is_twice_as_long(2,1.56)
is_twice_as_long(2,1.56)
is_twice_as_long(2,1.56)
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}
}
is_twice_as_long(3,4)
is_twice_as_long(3,3)
is_twice_as_long(3,9)
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
}else(part_a=part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a>part_b){
status<-print("the first is longer")
}  else if(part_a<part_b) {
status<-print("the second is longer")
} else(part_a=part_b){
is_twice_as_long(4,4)
is_twice_as_long(1,27)
if(part_a > part_b){
status <-print("the first is longer")
} if (part_a > part_b){
if(part_a > part_b){
status <-print("the first is longer")
} if (part_a > part_b){
if(part_a > part_b){
status <-print("the first is longer")
} else if (part_a > part_b){
status <- print("the second is longer")
} if (part_a = part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a > part_b){
status <-print("the first is longer")
} else if (part_a > part_b){
status <- print("the second is longer")
} else (part_a = part_b){
is_twice_as_long<- function(part_a,part_b){
if(part_a > part_b){
status <-print("the first is longer")
} else if (part_a > part_b){
status <- print("the second is longer")
} else {(part_a = part_b)
status <- print("they are the same length")
}status}
is_twice_as_long(3,9)
is_twice_as_long("below is my heart","below is my soul")
is_twice_as_long("below is my heart","cheese")
is_twice_as_long<- function(part_a,part_b){
if(part_a > part_b){
status <-print("the first is longer")
} else if (part_a > part_b){
status <- print("the second is longer")
} else {
status <- print("they are the same length")
}status}
if(part_a > part_b){
status <-print("the first is longer")
} else if (part_a > part_b){
status <- print("the second is longer")
} else{
status <- print("they are the same length")
}
is_twice_as_long<- function(part_a,part_b){
if(part_a > part_b){
status <-print("the first is longer")
} else if (part_a > part_b){
status <- print("the second is longer")
} else{
status <- print("they are the same length")
}
status}
is_twice_as_long(3,9)
is_twice_as_long<- function(part_a,part_b){
if(part_a > part_b){
status <-print("the first is longer")
} else if (part_a < part_b){
status <- print("the second is longer")
} else{
status <- print("they are the same length")
}
status}
is_twice_as_long("who stole my cat", "i did")
is_twice_as_long<- function(part_a,part_b){
if(part_a > part_b){
status <-print("the first is longer")
} else if (part_a < part_b){
status <- print("the second is longer")
} else{
status <- print("they are the same length")
}}
is_twice_as_long("who stole my cat", "i did")
is_twice_as_long("beans", "i hate beans")
is_twice_as_long("hey", "hey")
is_twice_as_long("hey", "bye")
is_twice_as_long("he is ok", "i am ok")
is_twice_as_long("u", "i")
is_twice_as_long<- function(part_a,part_b){
if(part_a > part_b){
status <-print("the first is longer")
} else if (part_a < part_b){
status <- print("the second is longer")
}else {
status <- print("they are the same length")
}}
is_twice_as_long<- function(part_a,part_b){
if(part_a > part_b){
status <-print("the first is longer")
} else if (part_a < part_b){
status <- print("the second is longer")
}else {
status <- print("they are the same length")
}}
is_twice_as_long("u", "i")
is_twice_as_long("u", "u")
is_twice_as_long("3", "9")
is_twice_as_long("3", "2+1")
is_twice_as_long("3", "(2+1)")
describe_difference <- function(part_a,part_b){
if(part_a > part_b){
status <-print("the first is longer")
} else if (part_a < part_b){
status <- print("the second is longer")
}else {
status <- print("they are the same length")
}}
rm(status)
is_twice_as_long <- function(L,M){
if (str_count(L)>= 2*str_count(M)){
print("It's greater than twice the length of M ")
} else if(strcount(L)< 2*str_count(M)) {
print("its less than twice the length")
} else {
print("equal")
}
}
is_twice_as_long_2 <- function(L,M){
if (str_count(L)>= 2*str_count(M)){
print("It's greater than twice the length of M ")
} else if(strcount(L)< 2*str_count(M)) {
print("its less than twice the length")
} else {
print("equal")
}
}
is_twice_as_long_2(5,6)
is_twice_as_long_2 <- function(L,M){
if (stringi::str_count(L)>= 2*stringi::str_count(M)){
print("It's greater than twice the length of M ")
} else if(strcount(L)< 2*str_count(M)) {
print("its less than twice the length")
} else {
print("equal")
}
}
is_twice_as_long_2(3,4)
install.packages(strngr)
install.packages(stringr)
install.packages("stringr")
library(stringr)
strngr(joke)
stringr(joke)
load("~/informatics hw 1/.RData")
load("~/informatics hw 1/.RData")
load("~/informatics hw 1/.RData")
git push
gitpush
names <- c("ambrose","lucy","xian")
n <- c(10:14)
length(n)
n+1
m <- c(seq(10:1))
m <- c(seq(1:10))
m <- seq(n)
rm(n)
rm m
rm (m)
n <- c(:10-14)
n <- c(10:14)
n+1
seq?
d]
seq?
d
?seq
m <- seq(c(10:1))
m <- seq(c(1:10))
print m
print()
print(m)
?seq()
m <- seq(10:1)
print me
print(m)
m <- seq.int(10:1)
print (m)
m <- seq(10,1,-1)
m
m-n
# Use the colon operator : to create a vector `n` of numbers from 10:49
n <- c(10:49)
m-n
m-n
x_range <-seq(-0.5,10,-0.1)
x_range <-seq(-0.5,10,0.1)
sin_wave <-sin(x_range)
cos_wave <- cos(x_range)
tfit <- (cos_wave*sin_wave)+sin_wave)
plot(wave)
wave <- cos_wave*sin_wave+sin_wave
plot(wave)
git add
git_add
source("~/info201/exercises/exercises-CrimsonAshes/chapter-07-exercises/exercise-1/exercise.R")
source("~/info201/exercises/exercises-CrimsonAshes/chapter-07-exercises/exercise-1/exercise.R")
source("~/info201/exercises/exercises-CrimsonAshes/chapter-07-exercises/exercise-1/exercise.R")
source("~/info201/exercises/exercises-CrimsonAshes/chapter-07-exercises/exercise-1/exercise.R")
source("~/info201/exercises/exercises-CrimsonAshes/chapter-07-exercises/exercise-1/exercise.R")
source("~/info201/exercises/exercises-CrimsonAshes/chapter-07-exercises/exercise-1/exercise.R")
